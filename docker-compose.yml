version: '3.8'

services:
  backend:
    build:
      context: ./backend_project
      dockerfile: dockerfile
    container_name: django-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend_project:/app
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - db
      - ai_models
      - redis

  ai_models:
    build:
      context: ./backend_project/apps/ai_models
      dockerfile: Dockerfile
    container_name: ai-models
    ports:
      - "8001:8001"
    command: uvicorn app:app --host 0.0.0.0 --port 8001
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Zwamtestar3
      POSTGRES_DB: AI_skincancer_detection
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: jensnicolaes@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres123
    ports:
      - "5050:80"
    depends_on:
      - db
      
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow
    ports:
      - "5001:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - mlflow_data:/mlflow
    command:
      - mlflow
      - server
      - --backend-store-uri
      - sqlite:///mlflow.db
      - --default-artifact-root
      - /mlflow/artifacts
      - --host
      - 0.0.0.0
      - --port
      - "5000"

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    container_name: react-frontend
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  celery-worker:
    build:
      context: ./backend_project
      dockerfile: dockerfile
    container_name: celery-worker
    command: celery -A backend.celery worker --loglevel=info
    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./backend_project:/app

volumes:
  postgres_data:
  mlflow_data:
  redis_data: